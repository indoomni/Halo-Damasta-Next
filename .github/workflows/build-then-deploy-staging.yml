name: Build then Deploy to Staging Server

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Added for pushing to GitHub Packages
      actions: write # Correct permission to allow triggering other workflows

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/indoomni/halo-damasta-next:latest

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}

      - name: Deploy to Staging Server
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST_STAGING }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER_STAGING }}
        run: |
          echo "Deploying to Staging Server after successful build.."
          ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST << 'EOF'
            cd /path/to/your/app # IMPORTANT: Replace with the actual path to your application on the server
            ./ci-pull.sh
            ./ci-start.sh staging swarm
          EOF
